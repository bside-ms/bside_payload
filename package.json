{
  "name": "payload-template-ts-blank",
  "description": "Payload project created from ts-blank template",
  "version": "1.0.0",
  "main": "dist/server.js",
  "license": "MIT",
  "scripts": {
    "ts-check": "tsc --noEmit --pretty",
    "ts-check:watch": "npm run ts-check -- --watch --preserveWatchOutput",
    "dev": "cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts nodemon",
    "build:payload": "cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload build",
    "build:server": "tsc",
    "build": "yarn copyfiles && yarn build:payload && yarn build:server",
    "serve": "cross-env PAYLOAD_CONFIG_PATH=dist/payload.config.js NODE_ENV=production node dist/server.js",
    "copyfiles": "copyfiles -u 1 \"src/**/*.{html,css,scss,ttf,woff,woff2,eot,svg,jpg,png}\" dist/",
    "generate:types": "cross-env PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:types",
    "generate:graphQLSchema": "PAYLOAD_CONFIG_PATH=src/payload.config.ts payload generate:graphQLSchema",
    "eslint": "eslint --quiet \"./**/*.{ts,tsx}\"",
    "eslint:fix": "npm run eslint -- --fix",
    "db-start": "docker compose up -d payload_mongo",
    "db-purge": "docker compose down && docker volume rm bside_payload_data && docker compose up -d payload_mongo",
    "db-stop": "docker compose down"
  },
  "dependencies": {
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "payload": "^1.6.15",
    "@payloadcms/plugin-redirects": "^1.0.0"
  },
  "devDependencies": {
    "@types/express": "^4.17.17",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "copyfiles": "^2.4.1",
    "cross-env": "^7.0.3",
    "eslint": "^8.35.0",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "eslint-plugin-unicorn": "^45.0.2",
    "eslint-plugin-unused-imports": "^2.0.0",
    "nodemon": "^2.0.20",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.5"
  }
}
